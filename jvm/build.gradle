apply plugin: 'kotlin-platform-jvm'

dependencies {
    expectedBy platformProject('common')
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testCompile "junit:junit:4.12"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
}

tasks.withType(compileKotlin.getClass()) {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

// --------------- pom configuration ---------------

def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "JetBrains"
            name "JetBrains Team"
            organization "JetBrains"
            organizationUrl "http://www.jetbrains.com"
        }
    }

    scm {
        url "https://github.com/Kotlin/kotlinx.cli"
    }
}

// ------------- tasks

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
    from rootProject.file("common/src/main/kotlin")
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            pom.withXml {
                def root = asNode()
                root.appendNode('name', rootProject.name)
                root.appendNode('description', 'Pure Kotlin implementation of a generic command-line parser.')
                root.appendNode('url', 'https://github.com/Kotlin/kotlinx.cli')
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publications = ['maven']
    pkg {
        name = 'kotlinx.cli'
        repo = 'kotlinx'
        userOrg = 'kotlin'
        issueTrackerUrl = 'https://github.com/Kotlin/kotlinx.cli/issues'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/Kotlin/kotlinx.cli.git'
        githubRepo = 'Kotlin/kotlinx.cli'
        version {
            name = project.version
            vcsTag = project.version
            released  = new Date()
        }
    }
}

bintrayUpload.doLast {
    println("Uploaded $project.name version $project.version")
}